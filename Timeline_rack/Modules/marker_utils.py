
import unicodedata
import re
import pandas as pd

def normalize_text(s: str) -> str:
    """
    Chu·∫©n h√≥a vƒÉn b·∫£n: x√≥a d·∫•u, lowercase, b·ªè kho·∫£ng th·ª´a
    """
    s = unicodedata.normalize('NFD', s)
    s = ''.join(c for c in s if unicodedata.category(c) != 'Mn')
    s = s.lower()
    s = re.sub(r"\s+", "", s)  # x√≥a m·ªçi kho·∫£ng tr·∫Øng
    return s

def find_first_last_position_from_marker(df: pd.DataFrame) -> tuple[str, str]:

    # [DEBUG] In c·∫•u tr√∫c b·∫£ng v√†o log file
    with open("debug_marker_df.txt", "w", encoding="utf-8") as f:
        f.write("üß™ C√ÅC C·ªòT:\n")
        f.write(str(df.columns.tolist()) + "\n\n")
        f.write("üß™ 10 D√íNG ƒê·∫¶U:\n")
        f.write(df.head(10).to_string(index=False))

    # [AN TO√ÄN] Ki·ªÉm tra b·∫Øt bu·ªôc c·ªôt 'action'
    if "action" not in df.columns:
        raise ValueError(f"‚ùå Kh√¥ng t√¨m th·∫•y c·ªôt 'action'. C·ªôt hi·ªán c√≥: {df.columns.tolist()}")


    """
    Tr√≠ch xu·∫•t v·ªã tr√≠ n·∫°p h√†ng v√† th√°o h√†ng t·ª´ c·ªôt 'action' trong DataFrame
    b·∫±ng c√°ch d√≤ marker d·∫°ng 'V·ªã tr√≠ 1D: n·∫°p h√†ng', kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng, d·∫•u ti·∫øng Vi·ªát, kho·∫£ng tr·∫Øng.
    """
    pos_nap = None
    pos_thao = None

    for val in df["action"].astype(str):
        text = normalize_text(val)

        if "vitri" in text and "naphang" in text:
            match = re.search(r"vitri(\d+)", text)
            if match:
                pos_nap = match.group(1)
        elif "vitri" in text and "thaohang" in text:
            match = re.search(r"vitri(\d+)", text)
            if match:
                pos_thao = match.group(1)

    if not pos_nap or not pos_thao:
        raise ValueError("‚ùå Kh√¥ng t√¨m ƒë∆∞·ª£c marker n·∫°p h√†ng ho·∫∑c th√°o h√†ng trong file timeline.")

    return f"{pos_nap}D", f"{pos_thao}D"
